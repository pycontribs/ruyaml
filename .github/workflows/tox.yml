name: gh

on:
  create:  # is used for publishing to PyPI and TestPyPI
    tags:  # any tag regardless of its name, no branches
      - "**"
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any integration branch but not tag
      - "master"
  pull_request:
  release:
    types:
      - published  # It seems that you can publish directly without creating
      - prereleased
  schedule:
    - cron: 1 0 * * *  # Run daily at 0:01 UTC
  # Run every Friday at 18:02 UTC
  # https://crontab.guru/#2_18_*_*_5
  # - cron: 2 18 * * 5

jobs:
  gh:
    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: linters
          python-version: 3.6
        # - name: docs
        #   python-version: 3.6
        #   continue-on-error: true
        - name: packaging
          python-version: 3.6
        - name: py36
          python-version: 3.6
        - name: py37
          python-version: 3.7
        - name: py38
          python-version: 3.8
        - name: py39
          python-version: 3.9
    steps:
    - uses: actions/checkout@master
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up stock Python ${{ matrix.python-version }} from GitHub
      if: >-
        !endsWith(matrix.python-version, '-dev')
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: >-
        Log the currently selected Python
        version info (${{ matrix.python-version }})
      run: |
        python --version --version
        which python
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ env.PY_SHA256 }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('pytest.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install tox
      run: |
        python -m pip install --upgrade tox
    - name: Log installed dists
      run: >-
        python -m pip freeze --all
    - name: "Test with tox"
      run: |
        python -m tox
      env:
        TOXENV: ${{ matrix.name }}
    - name: Archive logs
      uses: actions/upload-artifact@v2
      with:
        name: logs.zip
        path: .tox/**/log/

  publish:
    name: Publish to PyPI registry
    needs:
    - gh
    runs-on: ubuntu-latest

    env:
      PY_COLORS: 1
      TOXENV: packaging

    steps:
    - name: Switch to using Python 3.8 by default
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install tox
      run: >-
        python -m
        pip install
        --user
        tox
    - name: Check out src from Git
      uses: actions/checkout@v2
      with:
        # Get shallow Git history (default) for tag creation events
        # but have a complete clone for any other workflows.
        # Both options fetch tags but since we're going to remove
        # one from HEAD in non-create-tag workflows, we need full
        # history for them.
        fetch-depth: >-
          ${{
            (
              github.event_name == 'create' &&
              github.event.ref_type == 'tag'
            ) &&
            1 || 0
          }}
    - name: Drop Git tags from HEAD for non-tag-create events
      if: >-
        github.event_name != 'create' ||
        github.event.ref_type != 'tag'
      run: >-
        git tag --points-at HEAD
        |
        xargs git tag --delete
    - name: Pre-populate tox env
      run: python -m tox -p auto --parallel-live -vvvv --notest
    - name: Build dists
      run: python -m tox -p auto --parallel-live -vvvv
    - name: Publish to test.pypi.org
      if: >-
        (
          github.event_name == 'push' &&
          github.ref == format(
            'refs/heads/{0}', github.event.repository.default_branch
          )
        ) ||
        (
          github.event_name == 'create' &&
          github.event.ref_type == 'tag'
        )
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.testpypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish to pypi.org
      if: >-  # "create" workflows run separately from "push" & "pull_request"
        github.event_name == 'create' &&
        github.event.ref_type == 'tag'
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
